# Generated by Django 3.2.19 on 2023-08-02 08:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import funix.models.course


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('judge', '0147_auto_20230612_0623'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goals', models.TextField(verbose_name='Goals')),
                ('free', models.BooleanField(default=False, verbose_name='Is Free')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Course Name')),
                ('description', models.TextField(max_length=1000, verbose_name='Course Description')),
                ('certificate', models.CharField(blank=True, default='', max_length=225, verbose_name='Course Certificate')),
                ('og_image', models.CharField(blank=True, max_length=255, verbose_name='Og Image')),
                ('summary', models.TextField(blank=True, verbose_name='Course Summary')),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(blank=True)),
                ('slug', models.CharField(max_length=255, unique=True)),
                ('thumbnail', models.ImageField(default='default.jpg', upload_to='')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='courses', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
        ),
        migrations.CreateModel(
            name='CourseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Course Category')),
                ('slug', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SuspiciousSubmissionBehavior',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(verbose_name='Suspicious Behavior Time')),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suspicous_behaviors', to='judge.submission', verbose_name='Suspicious Submission Behavior')),
            ],
        ),
        migrations.CreateModel(
            name='SubmissionWPM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wpm', models.IntegerField(default=-1, null=True, verbose_name='Words Per Minutes')),
                ('submission', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wpm', to='judge.submission')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemTestCaseData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_data', models.TextField(blank=True, verbose_name='input')),
                ('output_data', models.TextField(blank=True, verbose_name='expected output')),
                ('problem_test_case', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='data', to='judge.problemtestcase')),
            ],
        ),
        migrations.CreateModel(
            name='FunixProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('courses', models.ManyToManyField(to='funix.Course')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='funix', to=settings.AUTH_USER_MODEL, verbose_name='Funix Profile')),
            ],
        ),
        migrations.CreateModel(
            name='CourseSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Section Name')),
                ('number', models.IntegerField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='funix.course')),
            ],
            options={
                'unique_together': {('name', 'number', 'course')},
            },
        ),
        migrations.CreateModel(
            name='CourseComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='funix.course')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='funix.coursecomment')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='course',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='funix.coursecategory'),
        ),
        migrations.CreateModel(
            name='ProblemInitialSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.TextField(blank=True, default='', max_length=65536, verbose_name='Problem Initial Source')),
                ('language', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='initial_codes', to='judge.language', verbose_name='Initial Source Language')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='initial_codes', to='judge.problem')),
            ],
            options={
                'unique_together': {('problem', 'language')},
            },
        ),
        migrations.CreateModel(
            name='CourseRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(default=5, validators=[funix.models.course.validate_rating])),
                ('created_at', models.DateTimeField(default='')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='funix.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('course', 'user')},
            },
        ),
        migrations.CreateModel(
            name='CourseProblem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('time', models.IntegerField(default=0)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_problems', to='funix.course')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_problems', to='judge.problem')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problems', to='funix.coursesection')),
            ],
            options={
                'permissions': [('view_course_problem', 'User can view the problem if enrolled')],
                'unique_together': {('problem', 'section', 'number')},
            },
        ),
    ]
